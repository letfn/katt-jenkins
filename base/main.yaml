apiVersion: v1
data:
  jenkins-password: ZEM0bmEzb2RDdw==
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-8.0.14
  name: jenkins
  namespace: jenkins
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-8.0.14
  name: jenkins
  namespace: jenkins
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/name: jenkins
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
  labels:
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-8.0.14
  name: jenkins
  namespace: jenkins
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-8.0.14
  name: jenkins
  namespace: jenkins
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: jenkins
      app.kubernetes.io/name: jenkins
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/secrets: bd57b5d5d6cfd5ac358db4e78fa7393e75696b4bab061f6a002197e5ef70f8b4
      labels:
        app.kubernetes.io/instance: jenkins
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: jenkins
        helm.sh/chart: jenkins-8.0.14
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: jenkins
                  app.kubernetes.io/name: jenkins
              namespaces:
              - jenkins
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: JENKINS_USERNAME
          value: user
        - name: JENKINS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: jenkins-password
              name: jenkins
        - name: JENKINS_HOME
          value: /bitnami/jenkins/home
        - name: DISABLE_JENKINS_INITIALIZATION
          value: "no"
        - name: JENKINS_HOST
          value: ""
        - name: JENKINS_EXTERNAL_HTTP_PORT_NUMBER
          value: "80"
        - name: JENKINS_EXTERNAL_HTTPS_PORT_NUMBER
          value: "443"
        image: docker.io/bitnami/jenkins:2.303.1-debian-10-r38
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /login
            port: http
          initialDelaySeconds: 180
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: jenkins
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /login
            port: http
          initialDelaySeconds: 30
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits: {}
          requests:
            cpu: 300m
            memory: 512Mi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        volumeMounts:
        - mountPath: /bitnami/jenkins
          name: jenkins-data
      securityContext:
        fsGroup: 1001
      volumes:
      - name: jenkins-data
        persistentVolumeClaim:
          claimName: jenkins
