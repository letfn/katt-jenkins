---
# Source: jenkins/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: jenkins
  namespace: "jenkins"
  labels:
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-8.0.14
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  jenkins-password: "ZEM0bmEzb2RDdw=="
---
# Source: jenkins/templates/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: jenkins
  namespace: "jenkins"
  labels:
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-8.0.14
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/managed-by: Helm
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "8Gi"
---
# Source: jenkins/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: "jenkins"
  labels:
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-8.0.14
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/managed-by: Helm
spec:
  type: LoadBalancer
  externalTrafficPolicy: "Cluster"
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/name: jenkins
    app.kubernetes.io/instance: jenkins
---
# Source: jenkins/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: "jenkins"
  labels:
    app.kubernetes.io/name: jenkins
    helm.sh/chart: jenkins-8.0.14
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: jenkins
      app.kubernetes.io/instance: jenkins
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jenkins
        helm.sh/chart: jenkins-8.0.14
        app.kubernetes.io/instance: jenkins
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/secrets: bd57b5d5d6cfd5ac358db4e78fa7393e75696b4bab061f6a002197e5ef70f8b4
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: jenkins
                    app.kubernetes.io/instance: jenkins
                namespaces:
                  - "jenkins"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: jenkins
          image: docker.io/bitnami/jenkins:2.303.1-debian-10-r38
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: JENKINS_USERNAME
              value: "user"
            - name: JENKINS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: jenkins
                  key: jenkins-password
            - name: JENKINS_HOME
              value: "/bitnami/jenkins/home"
            - name: DISABLE_JENKINS_INITIALIZATION
              value: "no"
            - name: JENKINS_HOST
              value: ""
            - name: JENKINS_EXTERNAL_HTTP_PORT_NUMBER
              value: "80"
            - name: JENKINS_EXTERNAL_HTTPS_PORT_NUMBER
              value: "443"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /login
              port: http
            initialDelaySeconds: 180
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /login
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          resources:
            limits: {}
            requests:
              cpu: 300m
              memory: 512Mi
          volumeMounts:
            - name: jenkins-data
              mountPath: /bitnami/jenkins
      volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: jenkins
